name: Build


on:
    push:
        branches:
            - master
            - next
            - beta
            - alpha
            - '*.*.*' # maintenance releases branches

    pull_request:
        types:
            - opened
            - synchronize


env:
    TZ: UTC
    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    GH_TOKEN: ${{ secrets.GH_TOKEN }}


jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    fetch-depth: 0

            -   name: Setup Node LTS
                uses: actions/setup-node@v3
                with:
                    node-version: 'lts/*'

            -   name: Install dependencies
                run: npm ci

            -   name: Set SHAs for base and head for `nx affected` commands
                id: setSHAs
                uses: nrwl/nx-set-shas@v2
                with:
                    main-branch-name: 'master'

            -   name: Check if libs are affected
                id: affected
                run: echo "::set-output name=affected::$(npx nx affected:libs --base=${{ steps.setSHAs.outputs.base }} --head=${{ steps.setSHAs.outputs.head }} --plain)"

            -   name: Build all packages
                run: npx nx run-many --target=build --all

            -   name: Lint all packages
                run: npx nx run-many --target=lint --all

            -   name: Unit tests all packages
                run: npx nx run-many --target=test --verbose --all --parallel --coverage

            -   name: Upload codecoverage report
                uses: codecov/codecov-action@v2
                with:
                    files: ./coverage/packages/cli/clover.xml,./coverage/packages/core/clover.xml,./coverage/packages/indicators/clover.xml,./coverage/packages/web/clover.xml
                    flags: unittests
                    name: codecov-umbrella
                    verbose: true

            -   name: Prepare publish
                if: ${{ steps.affected.outputs.affected != '' }}
                run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

            -   name: Publish all packages
                if: ${{ steps.affected.outputs.affected != '' }}
                run: npx semantic-release
