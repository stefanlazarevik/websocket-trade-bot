name: Build

on:
    push:
        branches:
            - master
            - next
            - beta
            - alpha
            - '*.x' # maintenance releases branches

    pull_request:
        types:
            - opened
            - synchronize

env:
    TZ: UTC

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build

        strategy:
            matrix:
                node-version: [ 14.x, 16.x ]

        steps:
            -   uses: actions/checkout@v2

            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v1
                with:
                    node-version: ${{ matrix.node-version }}

            -   name: Install dependencies
                run: npm ci

            -   name: Build all packages
                run: npx nx run-many --target=build --all

            -   name: Lint all packages
                run: npx nx run-many --target=lint --all --fix

            -   name: Unit tests all packages
                run: npx nx run-many --target=test --verbose --all --parallel --coverage

            -   name: Upload codecoverage report
                uses: codecov/codecov-action@v2
                if: matrix.node-version == '14.x' && github.ref_name == 'master'
                with:
                    files: ./coverage/packages/cli/clover.xml,./coverage/packages/core/clover.xml,./coverage/packages/indicators/clover.xml,./coverage/packages/web/clover.xml
                    flags: unittests
                    name: codecov-umbrella
                    verbose: true

            -   name: Release
                if: matrix.node-version == '14.x'
#                uses: mansagroup/nrwl-nx-action@v2.1.0
#                with:
#                    targets: release
                env:
                    GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                run: npx nx run-many --target=release --verbose --all

#            -   name: Publish release
#                if: matrix.node-version == '14.x' && github.ref_name == 'master'
#                env:
#                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#                    GH_TOKEN: ${{ secrets.GH_TOKEN }}
#                run: npx semantic-release
